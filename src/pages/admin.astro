---
// Simple admin page for creating blog posts
---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Admin - Add New Post</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 min-h-screen py-8">
    <div class="max-w-4xl mx-auto px-4">
        <div class="bg-white rounded-lg shadow-md p-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-8">Add New Blog Post</h1>
            
            <form id="blogForm" class="space-y-6">
                <!-- Title -->
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700 mb-2">
                        Post Title *
                    </label>
                    <input 
                        type="text" 
                        id="title" 
                        name="title" 
                        required
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                        placeholder="Enter your blog post title"
                    >
                </div>

                <!-- Description -->
                <div>
                    <label for="description" class="block text-sm font-medium text-gray-700 mb-2">
                        Description *
                    </label>
                    <textarea 
                        id="description" 
                        name="description" 
                        required
                        rows="3"
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                        placeholder="Brief description of your post"
                    ></textarea>
                </div>

                <!-- Author -->
                <div>
                    <label for="author" class="block text-sm font-medium text-gray-700 mb-2">
                        Author
                    </label>
                    <input 
                        type="text" 
                        id="author" 
                        name="author" 
                        value="Navid Jalilian"
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    >
                </div>

                <!-- Tags -->
                <div>
                    <label for="tags" class="block text-sm font-medium text-gray-700 mb-2">
                        Tags (comma separated)
                    </label>
                    <input 
                        type="text" 
                        id="tags" 
                        name="tags" 
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                        placeholder="personal-growth, success, productivity"
                    >
                    <p class="text-sm text-gray-500 mt-1">Leave empty for auto-generated tags</p>
                </div>

                <!-- Featured -->
                <div class="flex items-center">
                    <input 
                        type="checkbox" 
                        id="featured" 
                        name="featured"
                        class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    >
                    <label for="featured" class="ml-2 block text-sm text-gray-700">
                        Featured post (appears on homepage)
                    </label>
                </div>

                <!-- Content -->
                <div>
                    <label for="content" class="block text-sm font-medium text-gray-700 mb-2">
                        Content *
                    </label>
                    <textarea 
                        id="content" 
                        name="content" 
                        required
                        rows="20"
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-mono text-sm"
                        placeholder="Write your blog post content here in Markdown format..."
                    ></textarea>
                    <p class="text-sm text-gray-500 mt-1">You can use Markdown formatting</p>
                </div>

                <!-- Generate Button -->
                <div class="flex gap-4">
                    <button 
                        type="submit"
                        class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                    >
                        Generate Markdown File
                    </button>
                    <button 
                        type="button"
                        id="previewBtn"
                        class="bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700 focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
                    >
                        Preview
                    </button>
                </div>
            </form>

            <!-- Output -->
            <div id="output" class="mt-8 hidden">
                <h2 class="text-xl font-bold text-gray-900 mb-4">Generated Markdown File</h2>
                <div class="bg-gray-100 p-4 rounded-md">
                    <div class="flex justify-between items-center mb-2">
                        <span class="text-sm font-medium text-gray-700" id="filename"></span>
                        <button 
                            id="copyBtn"
                            class="bg-green-600 text-white px-3 py-1 text-sm rounded hover:bg-green-700"
                        >
                            Copy to Clipboard
                        </button>
                    </div>
                    <pre id="markdownOutput" class="bg-white p-4 rounded border text-sm overflow-x-auto"></pre>
                </div>
                <div class="mt-4 p-4 bg-blue-50 rounded-md">
                    <h3 class="font-medium text-blue-900 mb-2">Next Steps:</h3>
                    <ol class="text-sm text-blue-800 space-y-1">
                        <li>1. Copy the generated markdown content</li>
                        <li>2. Create a new file: <code class="bg-blue-100 px-1 rounded">src/content/blog/[filename].md</code></li>
                        <li>3. Paste the content and save</li>
                        <li>4. Commit and push to deploy</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <script>
        function slugify(text) {
            return text
                .toLowerCase()
                .replace(/[^\w\s-]/g, '')
                .replace(/[\s_-]+/g, '-')
                .replace(/^-+|-+$/g, '');
        }

        function generateMarkdown(formData) {
            const title = formData.get('title');
            const description = formData.get('description');
            const author = formData.get('author') || 'Navid Jalilian';
            const tags = formData.get('tags');
            const featured = formData.get('featured') === 'on';
            const content = formData.get('content');
            
            const slug = slugify(title);
            const date = new Date().toISOString().split('T')[0];
            
            // Auto-generate tags if empty
            let tagArray = [];
            if (tags.trim()) {
                tagArray = tags.split(',').map(tag => tag.trim());
            } else {
                // Simple auto-tagging based on content
                const words = (title + ' ' + description + ' ' + content).toLowerCase();
                const commonTags = [
                    'personal-growth', 'success', 'productivity', 'entrepreneurship',
                    'leadership', 'mindset', 'business', 'motivation', 'self-improvement'
                ];
                tagArray = commonTags.filter(tag => 
                    words.includes(tag.replace('-', ' ')) || 
                    words.includes(tag.replace('-', ''))
                ).slice(0, 3);
                
                if (tagArray.length === 0) {
                    tagArray = ['personal-growth'];
                }
            }

            const frontmatter = `---
title: "${title}"
description: "${description}"
pubDate: ${date}
author: "${author}"
tags: [${tagArray.map(tag => `"${tag}"`).join(', ')}]
heroImage: ""
featured: ${featured}
draft: false
---

${content}`;

            return { frontmatter, slug };
        }

        document.getElementById('blogForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const { frontmatter, slug } = generateMarkdown(formData);
            
            document.getElementById('filename').textContent = `${slug}.md`;
            document.getElementById('markdownOutput').textContent = frontmatter;
            document.getElementById('output').classList.remove('hidden');
            
            // Scroll to output
            document.getElementById('output').scrollIntoView({ behavior: 'smooth' });
        });

        document.getElementById('copyBtn').addEventListener('click', function() {
            const content = document.getElementById('markdownOutput').textContent;
            navigator.clipboard.writeText(content).then(() => {
                this.textContent = 'Copied!';
                this.classList.remove('bg-green-600', 'hover:bg-green-700');
                this.classList.add('bg-green-800');
                
                setTimeout(() => {
                    this.textContent = 'Copy to Clipboard';
                    this.classList.remove('bg-green-800');
                    this.classList.add('bg-green-600', 'hover:bg-green-700');
                }, 2000);
            });
        });

        document.getElementById('previewBtn').addEventListener('click', function() {
            const formData = new FormData(document.getElementById('blogForm'));
            const { frontmatter } = generateMarkdown(formData);
            
            // Simple preview (you could enhance this with a proper markdown renderer)
            alert('Preview functionality - you could integrate a markdown preview here');
        });
    </script>
</body>
</html>
